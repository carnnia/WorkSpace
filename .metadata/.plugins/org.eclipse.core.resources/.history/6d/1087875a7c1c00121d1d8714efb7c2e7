import java.util.Random;
/*
Name:		Casey Carnnia
Date: 		10.22.2012
Scope:		Problem 5: The Drunkard's Walk. 
			A drunkard in a grid of streets randomly picks one of four directions and stumbles to the next intersection, 
			then again randomly picks one of the four directions, and so on. 
			You might think that on average the drunkard doesn't move very far because the choices cancel each other out, 
			but that is actually not the case.
			Represent locations as integer pairs(x,y). Implement the drunkard's walk over 100 intersections, 
			starting at (0,0) and print the ending location.



Solution: 	prompt the user for input. 
 			 
				
*/
 
// declare class
public class drunkardWalk{
	//declare the main method
	public static void main(String[] args) {
		 
		// welcome the user
		System.out.println("If a drunk person at location (x,y) randomly travels i various directions in a grid city. What happens after 100 random choices.");

		Random randomGenerator = new Random();
		int x = 0;
		int y = 0;
		for (int decisionCounter = 0; decisionCounter <= 100; decisionCounter ++){
			int direction = randomGenerator.nextInt(4) ;
			 System.out.print(direction + "\t");
			 switch (direction) {
			 case 1: x = x + 1; //going north one block
			 		break;
			 case 2: x = x + -1;//going south one block
		 		break;
		 		
			 case 3: y = y + 1;//going east one block
		 		break;
		 		
			 case 4: y = y - 1;//going west one block
		 		break;
			 }//switch END
			
		}//loop END
		System.out.println("after 100 tries x is " + x + " and y is " + y );
		  
  
	}//main END
}//class END

 